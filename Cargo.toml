[package]
name = "firewheel"
version = "0.6.0-beta.0"
description = "Flexible, high-performance, and libre audio engine for games (WIP)"
repository.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
exclude.workspace = true

# Show documentation with all features enabled on docs.rs
[package.metadata.docs.rs]
all-features = true

[workspace.package]
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["Billy Messenger <60663878+BillyDM@users.noreply.github.com>"]
keywords = ["game", "audio", "graph"]
categories = ["game-development", "multimedia::audio"]
exclude = ["assets/"]
repository = "https://github.com/BillyDM/firewheel"

[features]
default = [
    "cpal",
    "symphonium",
    "symphonium_resample",
    "sampler_node"
]
# Enables scheduling events for nodes
scheduled_events = [
    "firewheel-core/scheduled_events",
    "firewheel-graph/scheduled_events",
    "firewheel-nodes/scheduled_events"
]
# Enables the musical transport feature
musical_transport = [
    "scheduled_events",
    "firewheel-core/musical_transport",
    "firewheel-graph/musical_transport"
]
# Enables the cpal backend
cpal = ["dep:firewheel-cpal"]
# Enables resampling input streams in the cpal backend
cpal_resample_inputs = ["firewheel-cpal?/resample_inputs"]
# Enables using Symphonium for loading audio files
symphonium = ["firewheel-core/symphonium"]
# Enables resampling audio files when loading them with Symphonium
symphonium_resample = ["firewheel-core/resampler"]
# Enables the "arbitrary sinc" resampler for changing the pitch/length
# of samples at load time.
symphonium_stretch = ["firewheel-core/symphonium_stretch"]
# Enables the `SamplerPool` helper type for constructing a pool of
# sampler nodes that can dynamically be assigned work.
sampler_pool = ["sampler_node", "dep:thunderdome", "dep:smallvec"]
# Enables all built-in factory nodes
all_nodes = [
    "beep_test_node",
    "peak_meter_node",
    "sampler_node",
    "spatial_basic_node",
    "stream_nodes",
    "noise_gen_nodes",
]
# Enables the "beep test" node
beep_test_node = ["firewheel-nodes/beep_test"]
# Enables the peak meter node
peak_meter_node = ["firewheel-nodes/peak_meter"]
# Enables the sampler node
sampler_node = ["firewheel-nodes/sampler"]
# Enables the basic 3D spatial positioning node
spatial_basic_node = ["firewheel-nodes/spatial_basic"]
# Enables the stream writer/reader nodes for sending/receiving audio
# directly to/from the audio graph from another thread.
stream_nodes = ["firewheel-nodes/stream"]
# Enables the white and pink noise generator nodes
noise_gen_nodes = ["firewheel-nodes/noise_generators"]
# Enables `Component` derive macros for node parameters
bevy = ["firewheel-nodes/bevy", "firewheel-core/bevy"]
# Enables `Reflect` derive macros for node parameters
bevy_reflect = ["firewheel-nodes/bevy_reflect", "firewheel-core/bevy_reflect"]
# Enables the wasm-bindgen feature for the CPAL backend
wasm-bindgen = ["firewheel-cpal/wasm-bindgen"]

[workspace]
members = [
    "crates/firewheel-core",
    "crates/firewheel-cpal",
    "crates/firewheel-graph",
    "crates/firewheel-nodes",
    "crates/firewheel-macros",
    "examples/beep_test",
    "examples/cpal_input",
    "examples/custom_nodes",
    "examples/play_sample",
    "examples/sampler_pool",
    "examples/sampler_test",
    "examples/spatial_basic",
    "examples/stream_nodes",
    "examples/visual_node_graph",
]

[workspace.dependencies]
log = "0.4"
ringbuf = { version = "0.4", features = ["portable-atomic"] }
triple_buffer = "8"
thiserror = "2"
smallvec = "1"
arrayvec = "0.7"
bitflags = "2"
thunderdome = "0.6"
crossbeam-utils = "0.8"
fast-interleave = "0.1"
firewheel-macros = { path = "crates/firewheel-macros", version = "0.2.0" }
bevy_platform = "0.16.0"

[dependencies]
firewheel-core = { path = "crates/firewheel-core", version = "0.6.0-beta.0" }
firewheel-graph = { path = "crates/firewheel-graph", version = "0.6.0-beta.0" }
firewheel-cpal = { path = "crates/firewheel-cpal", version = "0.6.0-beta.0", default-features = false, optional = true }
firewheel-nodes = { path = "crates/firewheel-nodes", version = "0.6.0-beta.0", default-features = false }
thunderdome = { workspace = true, optional = true }
smallvec = { workspace = true, optional = true }
thiserror.workspace = true

# Optimize all dependencies in debug builds:
[profile.dev.package."*"]
opt-level = 2

[dev-dependencies]
criterion = "0.6"

[[bench]]
name = "core"
harness = false
